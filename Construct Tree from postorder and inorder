/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

struct TreeNode* newNode(int val) 
{ 
    struct TreeNode* node = (struct TreeNode*)malloc(sizeof(struct TreeNode)); 
    node->val = val; 
    node->left = NULL; 
    node->right = NULL; 
  
    return node; 
} 

struct TreeNode* constructTree(int * post,int * in,int istart,int iend,int pstart,int pend)
{
   
   if(istart>iend || pstart>pend)
       return NULL;
    int val=post[pend];
    int i=istart;
    while(in[i]!=val)
        i++;
    struct TreeNode* root = newNode(val);
        root->left = constructTree(post, in, istart, i-1, pstart, pstart+i-istart-1);
        root->right = constructTree(post,in, i+1, iend, pend-(iend-i), pend-1);
        return root;
}


struct TreeNode* buildTree(int* inorder, int inorderSize, int* postorder, int postorderSize){
return constructTree(postorder,inorder,0,inorderSize-1,0,postorderSize-1);
    
    
}




